{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"templ",
				"template\t[ID]"
			],
			[
				"EventDa",
				"EventDataMap"
			],
			[
				"E_",
				"E_NODEUPDATEEND"
			],
			[
				"GetEve",
				"GetEventData\tEventData &"
			],
			[
				"Event",
				"EventKey"
			],
			[
				"Nod",
				"NodeUpdateBegin\t(SNode.h)"
			],
			[
				"Node",
				"NodeUpdateBegin\t(SNode.h)"
			],
			[
				"Sce",
				"Scene/"
			],
			[
				"GetEvent",
				"GetEventName\tconst std::string &"
			],
			[
				"upd",
				"NodeUpdateBegin"
			],
			[
				"E_NODE",
				"E_NODEUPDATEEND\t(SNode.h)"
			],
			[
				"SLT",
				"SLT_EVENT\t(EventManager.h)"
			],
			[
				"Sl",
				"SLT_Event\t(EventManager.h)"
			],
			[
				"bkdr",
				"bkdrHash\t[ID]"
			],
			[
				"Regis",
				"RegisterEventName"
			],
			[
				"sha",
				"shared_ptr\t(SNode.h)"
			],
			[
				"GetE",
				"GetEventNameMap"
			],
			[
				"eventNa",
				"eventNameMap_"
			],
			[
				"GetNam",
				"GetEventName\t(EventManager.h)"
			],
			[
				"Re",
				"RegisterEventName\t(EventManager.h)"
			],
			[
				"EventR",
				"EventNameRegistrar\t(EventManager.h)"
			],
			[
				"Ma",
				"Math.h"
			],
			[
				"usi",
				"unsigned"
			],
			[
				"ge",
				"getEventKey"
			],
			[
				"Subc",
				"SubscribeEventIml"
			],
			[
				"ES_",
				"ES_UpdateEnd\tslt::SNode::EventSNodeType"
			],
			[
				"EventHan",
				"EventHandlerIml\t(MyBreakoutScene.cpp)"
			],
			[
				"m_",
				"m_events\tIdHandlerMap"
			],
			[
				"EventMan",
				"EventManager\t[ID]"
			],
			[
				"E",
				"Event/"
			],
			[
				"sr",
				"src/"
			],
			[
				"EventSNodeUpd",
				"EventSNodeUpdateBegin\t[ID]"
			],
			[
				"SNode",
				"SNode::EventSNodeType::ES_UpdateBegin"
			],
			[
				"ball",
				"ballNode"
			],
			[
				"EventHa",
				"EventHandlerIml.h"
			],
			[
				"EventS",
				"EventSNodeUpdateEnd\t(SNode.h)"
			],
			[
				"EventSnod",
				"EventSNodeUpdateEnd"
			],
			[
				"EventSnode",
				"EventSNodeUpdateBegin\t[ID]"
			],
			[
				"Ev",
				"EventSNode"
			],
			[
				"ME",
				"Memory_SRC_LIST"
			],
			[
				"EVENT",
				"EVENTHANDLERIML_H"
			],
			[
				"d",
				"DispatchEvent\tvoid"
			],
			[
				"m_rec",
				"m_reciver\tslt::EventReciver *"
			],
			[
				"Eve",
				"EventSender\t(EventSender.h)"
			],
			[
				"hand",
				"handler"
			],
			[
				"Even",
				"Event"
			],
			[
				"list",
				"listIta"
			],
			[
				"Hand",
				"HandlerEvent\t(EventManager.cpp)"
			],
			[
				"Eent",
				"EventManager"
			],
			[
				"m_een",
				"m_eventKey\t[ID]"
			],
			[
				"Env",
				"EventSender\t(EventSender.h)"
			],
			[
				"m_pa",
				"m_physicalWorld"
			],
			[
				"par",
				"parent\t[ID]"
			],
			[
				"m_pos",
				"m_posation\tb2Vec2"
			],
			[
				"Box",
				"Box2D.h\t(SNode.h)"
			],
			[
				"po",
				"positionIterations\tint32"
			],
			[
				"ve",
				"velocityIterations"
			],
			[
				"sh",
				"shared_ptr"
			],
			[
				"phys",
				"physicalWorld"
			],
			[
				"rea",
				"retain\tvoid"
			],
			[
				"GetLin",
				"GetLinearVelocity\tconst b2Vec2 &"
			],
			[
				"GEt",
				"GetManifold\tb2Manifold *"
			],
			[
				"A",
				"ApplyLinearImpulse\tvoid"
			],
			[
				"App",
				"ApplyForceToCenter\tvoid"
			],
			[
				"Pie",
				"PixelToMeter\tconst float"
			],
			[
				"Pi",
				"PixelToMeter\tconst float"
			],
			[
				"Cree",
				"CreatePhysicalBody\tstd::shared_ptr<PhysicalBody>"
			],
			[
				"up",
				"upLocalWorldPos"
			],
			[
				"Crea",
				"CreateChild\tBreakout::SNode *"
			],
			[
				"use",
				"userDataB"
			],
			[
				"Phy",
				"PhysicalBody"
			],
			[
				"GetFix",
				"GetFixtureB\tb2Fixture *"
			],
			[
				"GetF",
				"GetFixtureA\tb2Fixture *"
			],
			[
				"SetT",
				"SetTransform\tvoid"
			],
			[
				"get",
				"getPointCount\tstd::size_t"
			],
			[
				"Get",
				"GetFixture\tb2Fixture *"
			],
			[
				"GetWor",
				"GetWorldPoint\tb2Vec2"
			],
			[
				"Con",
				"ConvexShape"
			],
			[
				"cir",
				"circleP"
			],
			[
				"e_",
				"e_typeCount\tb2Shape::Type"
			],
			[
				"bod",
				"bodyDef\t[ID]"
			],
			[
				"Me",
				"MeterToPixel\tconst float"
			],
			[
				"Cr",
				"CircleShape"
			],
			[
				"m_p",
				"m_physicalBody"
			],
			[
				"m_co",
				"m_centroid\tb2Vec2"
			],
			[
				"Draw",
				"DrawSolidPolygon\tvoid"
			],
			[
				"GetW",
				"GetWorldPoint\tb2Vec2"
			],
			[
				"GEtP",
				"GetWorldPoint\tb2Vec2"
			],
			[
				"DrawS",
				"DrawSolidCircle\tvoid"
			],
			[
				"M",
				"Math.h"
			],
			[
				"Ver",
				"Vector2f\t[ID]"
			],
			[
				"e",
				"e_typeCount\tb2Shape::Type"
			],
			[
				"s",
				"switch"
			],
			[
				"getP",
				"getPoint\tVector2f"
			],
			[
				"Cov",
				"ConvexShape\t[ID]"
			],
			[
				"C",
				"Color"
			],
			[
				"Co",
				"ConvexShape"
			],
			[
				"Se",
				"Settings\t[ID]"
			],
			[
				"SetD",
				"SetDebugDraw\tvoid"
			],
			[
				"physi",
				"physicalBody"
			],
			[
				"Worl",
				"WorldCoordSToPhysicalCoordS\tconst b2Vec2"
			],
			[
				"b2_",
				"b2_kinematicBody\tb2BodyType"
			],
			[
				"be",
				"beginContact"
			],
			[
				"m_b",
				"m_beginContact"
			],
			[
				"Ph",
				"PhysicalFixture.h"
			],
			[
				"SL",
				"SLTOMETER_UNIT\tfloat"
			],
			[
				"fix",
				"fixtureDef"
			],
			[
				"r",
				"release\t[ID]"
			],
			[
				"b2Fix",
				"b2FixtureDef\t[ID]"
			],
			[
				"Phys",
				"PhysicalBody"
			],
			[
				"me",
				"memory\t[ID]"
			],
			[
				"lc",
				"localWorldPos"
			],
			[
				"Wor",
				"WorldCoordSToPhysicalCoordS\tconst b2Vec2"
			],
			[
				"Wo",
				"WorldCoordSToPhysicalCoordS\tconst b2Vec2"
			],
			[
				"b2Vec",
				"b2Vec2\t[ID]"
			],
			[
				"CreatePh",
				"CreatePhysicalWorld\t[ID]"
			],
			[
				"Obj",
				"Object\t[ID]"
			],
			[
				"m_phy",
				"m_physicalBody\t[ID]"
			],
			[
				"Bre",
				"Breakout\t[ID]"
			],
			[
				"us",
				"SetUserData\tvoid"
			],
			[
				"Deb",
				"DrawDebugData\tvoid"
			],
			[
				"Set",
				"SetContactListener\tvoid"
			],
			[
				"De",
				"SetDebugDraw\tvoid"
			],
			[
				"gent",
				"getInstance\t[ID]"
			],
			[
				"isOp",
				"isOpenDebugDraw\t[ID]"
			],
			[
				"drawC",
				"DrawSolidCircle\tvoid"
			],
			[
				"Upda",
				"UpdateSelf\tvoid"
			],
			[
				"con",
				"convex"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Test/test/BreakoutScene/MyBreakoutScene.h",
			"settings":
			{
				"buffer_size": 479,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Test/test/BreakoutScene/MyBreakoutScene.cpp",
			"settings":
			{
				"buffer_size": 12108,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Event/Event.h",
			"settings":
			{
				"buffer_size": 176,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Event/EventManager.h",
			"settings":
			{
				"buffer_size": 1884,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Event/EventManager.cpp",
			"settings":
			{
				"buffer_size": 3131,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Slt (Linux)",
	"build_system_choices":
	[
		[
			[
				[
					"Slt (Linux)",
					""
				],
				[
					"Slt (Linux)",
					"clean"
				],
				[
					"Slt (Linux)",
					"rebuild_cache"
				],
				[
					"Slt (Linux)",
					"slt"
				],
				[
					"Slt (Linux)",
					"main"
				]
			],
			[
				"Slt (Linux)",
				""
			]
		],
		[
			[
				[
					"Slt (Linux)",
					""
				],
				[
					"Slt (Linux)",
					"clean"
				],
				[
					"Slt (Linux)",
					"rebuild_cache"
				],
				[
					"Slt (Linux)",
					"slt"
				],
				[
					"Slt (Linux)",
					"tank"
				]
			],
			[
				"Slt (Linux)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ycmd",
				"Ycmd: Show Error Panel"
			],
			[
				"yc",
				"Ycmd: Show Error Panel"
			],
			[
				"git: add",
				"Git: Add All"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"Git:add",
				"Git: Add All"
			],
			[
				"git:",
				"Git: Commit"
			],
			[
				"val",
				"Set Syntax: Valgrind"
			],
			[
				"valgrind",
				"Set Syntax: Valgrind"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Git:push",
				"Git: Push Tags"
			],
			[
				"git:push",
				"Git: Push"
			],
			[
				"git:comm",
				"Git: Commit"
			],
			[
				"git:add",
				"Git: Add Current File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ycm",
				"Ycmd: Show Error Panel"
			],
			[
				"y",
				"Ycmd: Show Error Panel"
			],
			[
				"DOc",
				"DoxyDoxygen: Comment All"
			],
			[
				"Do",
				"DoxyDoxygen: Tutorial"
			],
			[
				"ymc",
				"Ycmd: Show Error Panel"
			],
			[
				"ycm\t",
				"Ycmd: Show Error Panel"
			],
			[
				"yc\tmd:Sh\t",
				"Ycmd: Show Error Panel"
			],
			[
				"ycdm",
				"Ycmd: Show Error Panel"
			],
			[
				"insta\t",
				"Package Control: Install Package"
			],
			[
				"Ycmd",
				"Ycmd: Restart ycmd server"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Rmeve",
				"Package Control: Remove Package"
			],
			[
				"Cmake",
				"CMake Format: Format Selection"
			],
			[
				"pack",
				"Preferences: Package Control Settings â€“ Default"
			],
			[
				"inst\t",
				"Package Control: Install Package"
			],
			[
				"rme",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"fun",
				"Code Folding: Unfold All"
			],
			[
				"remv",
				"Package Control: Remove Package"
			],
			[
				"instal\t",
				"Package Control: Install Package"
			],
			[
				"\\",
				"Package Control: Upgrade/Overwrite All Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"exit()",
			"quit()",
			"exit",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/lscott/Documents/Projrect/Slt",
		"/home/lscott/Documents/Projrect/Slt/src",
		"/home/lscott/Documents/Projrect/Slt/src/Graphic"
	],
	"file_history":
	[
		"/home/lscott/Documents/Projrect/Slt/src/Graphic/Graphic.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/SNode.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Math/Math.h",
		"/home/lscott/Documents/Projrect/Slt/src/Graphic/Graphic.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/Node.h",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalBody.h",
		"/home/lscott/Documents/Projrect/Slt/src/ResourceManager/ResourceManager.h",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/SNode.h",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/View.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventManager.h",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/SceneManager.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventManager.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventSender.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventSender.h",
		"/home/lscott/Documents/Projrect/Slt/Test/test/mainTest.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/test/MyApplication.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/test/MyApplication.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/Math.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Application.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/test/mainNew.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Application.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventHandlerIml.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventHandlerIml.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventHandler.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventHandler.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventReciver.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/EventReciver.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Object.h",
		"/home/lscott/Documents/Projrect/Slt/src/Event/Event.h",
		"/home/lscott/Documents/Projrect/Slt/src/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Slt/src/Math/StringHash.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/StringHash.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Event/Event.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Engine/Engine.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/Scene.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/test/BreakoutScene/MyBreakoutScene.cpp",
		"/home/lscott/Documents/Projrect/Slt/readme.txt",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalWorld.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/test/BreakoutScene/MyBreakoutScene.h",
		"/home/lscott/Documents/Projrect/Slt/src/AllSub.h",
		"/home/lscott/Documents/Projrect/Slt/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/Scene.h",
		"/home/lscott/Documents/Projrect/Slt/Test/tankTest/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Slt/Test/tankTest/MainScene/MainScene.h",
		"/home/lscott/Documents/Projrect/Slt/Test/tankTest/MainScene/MainScene.cpp",
		"/home/lscott/Documents/Projrect/Slt/Test/tankTest/MyApplication.h",
		"/home/lscott/Documents/Projrect/Slt/Test/tankTest/MyApplication.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Object.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalWorld.h",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalBody.cpp",
		"/home/lscott/Documents/Projrect/Slt/test/BreakoutScene/MyBreakoutScene.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/AutoreleasePool.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/PoolManager.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/AutoreleasePool.h",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/PoolManager.h",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/Ref.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/MemoryManager/Ref.h",
		"/home/lscott/Documents/Projrect/Slt/test/MyApplication.cpp",
		"/home/lscott/Documents/Projrect/Slt/test/BreakoutScene/MyBreakoutScene.h",
		"/home/lscott/Documents/Projrect/Slt/test/MyApplication.h",
		"/home/lscott/Documents/Projrect/Slt/test/mainTest.cpp",
		"/home/lscott/Documents/Projrect/Slt/test/mainNew.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Engine/Engine.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/QuadNode.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Math/QuadNode.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/QuadTree.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Math/QuadTree.h",
		"/home/lscott/Documents/Projrect/Slt/src/Math/Tree.h",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalFixture.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Physical/PhysicalFixture.h",
		"/home/lscott/Documents/Projrect/Slt/src/ResourceManager/ResourceManager.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/SceneManager.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Body/Ball/Ball.h",
		"/home/lscott/Documents/Projrect/Slt/src/Body/Block/Block.h",
		"/home/lscott/Documents/Projrect/Slt/src/Body/Brick/Brick.h",
		"/home/lscott/Documents/Projrect/Slt/src/Graphic/Camera.cpp",
		"/home/lscott/Documents/Projrect/Slt/src/Graphic/Camera.h",
		"/home/lscott/Documents/Projrect/Slt/src/Scene/View.cpp",
		"/home/lscott/Documents/Projrect/Slt/test/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Slt/Slt.sublime-project",
		"/home/lscott/Documents/Projrect/Breakout_2_2/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Breakout_2_2/Breakout_2_2.sublime-project",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Graphic/Graphic.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Graphic/Graphic.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalFixture.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalFixture.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalBody.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalBody.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalWorld.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/PhysicalWorld.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/MemoryManager/Ref.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Object.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/Scene.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/SNode.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/SNode.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/Scene.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/MyApplication.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Math/Math.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Math/Math.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Engine/Engine.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Engine/Engine.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/MyApplication.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/AllSub.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Object.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/MemoryManager/Ref.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Application.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Physical/Physical.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/SceneManager.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Scene/SceneManager.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Application.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/BreakoutScene/MyBreakoutScene.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/BreakoutScene/MyBreakoutScene.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/mainTest.cpp",
		"/home/lscott/.config/sublime-text-3/Packages/User/DoxyDoc.sublime-settings",
		"/home/lscott/.config/sublime-text-3/Packages/DoxyDoc/DoxyDoc.sublime-settings",
		"/home/lscott/Documents/Learn/Lisp/plot/plot.lisp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Math/Node.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/libBreakout/Math/Tree.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/MyBreakoutScene.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/lib/CMakeLists.txt",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Scene/Scene.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Scene/Scene.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Engine/Engine.cpp",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Engine/Engine.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Scene/SNode.h",
		"/home/lscott/Documents/Projrect/Breakout_2_2/src/Scene/SNode.cpp"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 125.0,
		"where_history":
		[
			"/home/lscott/Documents/Projrect/Slt/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"unsigned",
			"__gnu_cxx::hash_map<std::string",
			"View",
			"std::hash_map",
			"#include <hash_map>",
			"#include <map>",
			"std::map",
			"\");\n",
			"printf",
			"print",
			"printf",
			"*/)",
			"fun",
			"std::function<int(Event *)> fun",
			"EventFun",
			"EventHandler * handler",
			"EventHandler(",
			"remove",
			"add",
			"EventReceiver",
			";\n",
			"EventSender",
			"MyBreakoutScene",
			"positionIterations",
			"()),\n",
			"std::shared_ptr",
			"Breakout"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"std::map<std::string",
			"__gnu_cxx::hash_map",
			"#include <ext/hash_map>",
			"#include <hash_map>",
			"std::hash_map",
			"handler",
			"EventHandler * handler",
			"EventHandler",
			"std::function<int(Event *)> fun",
			"EventFun",
			"Remove",
			"Add",
			"EventHandler",
			"EventManager",
			"EventReceiver",
			"MainScene",
			"slt"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Test/test/BreakoutScene/MyBreakoutScene.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 479,
						"regions":
						{
						},
						"selection":
						[
							[
								441,
								441
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										477,
										478
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										389,
										390
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										441,
										442
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										389,
										390
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Test/test/BreakoutScene/MyBreakoutScene.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12108,
						"regions":
						{
						},
						"selection":
						[
							[
								11863,
								11863
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										11862,
										11863
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										11317,
										11318
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2985.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "src/Event/Event.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 176,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								176
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Event/EventManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1884,
						"regions":
						{
						},
						"selection":
						[
							[
								1322,
								1322
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1879,
										1884
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1,
										7
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1879,
										1884
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1,
										7
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 561.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Event/EventManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3131,
						"regions":
						{
						},
						"selection":
						[
							[
								2410,
								2410
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2463,
										2464
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2336,
										2337
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1836.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.0410846343468,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang-errors":
	{
		"height": 108.0
	},
	"output.exec":
	{
		"height": 137.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 120.0
	},
	"pinned_build_system": "Slt (Linux)",
	"project": "Slt.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
